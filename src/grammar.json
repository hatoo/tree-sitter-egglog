{
  "name": "egglog",
  "rules": {
    "source_file": {
      "type": "SYMBOL",
      "name": "expr"
    },
    "lparen": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "["
        }
      ]
    },
    "rparen": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "lparen"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "SYMBOL",
          "name": "rparen"
        }
      ]
    },
    "comma": {
      "type": "REPEAT1",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expr"
          },
          {
            "type": "STRING",
            "value": ","
          }
        ]
      }
    },
    "command": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "lparen"
            },
            {
              "type": "STRING",
              "value": "set-option"
            },
            {
              "type": "SYMBOL",
              "name": "ident"
            },
            {
              "type": "SYMBOL",
              "name": "expr"
            },
            {
              "type": "SYMBOL",
              "name": "rparen"
            }
          ]
        }
      ]
    },
    "expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "literal"
        },
        {
          "type": "SYMBOL",
          "name": "callexpr"
        }
      ]
    },
    "literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "num"
        },
        {
          "type": "SYMBOL",
          "name": "f64"
        },
        {
          "type": "SYMBOL",
          "name": "symstring"
        }
      ]
    },
    "callexpr": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "lparen"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "SYMBOL",
          "name": "rparen"
        }
      ]
    },
    "num": {
      "type": "PATTERN",
      "value": "(-)?[0-9]+"
    },
    "unum": {
      "type": "PATTERN",
      "value": "[0-9]+"
    },
    "f64": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "NaN"
        },
        {
          "type": "PATTERN",
          "value": "(-)?[0-9]+\\.[0-9]+(e(\\+)?(-)?[0-9]+)?"
        },
        {
          "type": "STRING",
          "value": "inf"
        },
        {
          "type": "STRING",
          "value": "-inf"
        }
      ]
    },
    "ident": {
      "type": "PATTERN",
      "value": "(([[a-zA-z_]][\\w-]*)|([-+*/?!=<>&|^/%_]))+"
    },
    "symstring": {
      "type": "SYMBOL",
      "name": "string"
    },
    "string": {
      "type": "PATTERN",
      "value": "\"(\"[^\"]*\")+\""
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "PATTERN",
      "value": ";[^\\n\\r]*[\\n\\r]*"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

